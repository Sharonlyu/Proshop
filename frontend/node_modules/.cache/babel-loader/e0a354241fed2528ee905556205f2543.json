{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`); //get product id from api\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)); //save to localstorage (only store strings in json) where we use getState()\n  //because we want to save the entire cart\n}; // export const removeFromCart = (id) => (dispatch, getState) => {\n//   dispatch({\n//     type: CART_REMOVE_ITEM,\n//     payload: id,\n//   })\n//   localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n// }\n// export const saveShippingAddress = (data) => (dispatch) => {\n//   dispatch({\n//     type: CART_SAVE_SHIPPING_ADDRESS,\n//     payload: data,\n//   })\n//   localStorage.setItem('shippingAddress', JSON.stringify(data))\n// }\n// export const savePaymentMethod = (data) => (dispatch) => {\n//   dispatch({\n//     type: CART_SAVE_PAYMENT_METHOD,\n//     payload: data,\n//   })\n//   localStorage.setItem('paymentMethod', JSON.stringify(data))\n// }","map":{"version":3,"sources":["/Users/yuliu/proshop/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,0BAHF,EAIEC,wBAJF,QAKO,4BALP;AAOA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB,CADkE,CACX;;AACvDE,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEX,aADC;AAEPY,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFJ;AAGPC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHL;AAIPC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJL;AAKPC,MAAAA,YAAY,EAAET,IAAI,CAACS,YALZ;AAMPZ,MAAAA;AANO;AAFF,GAAD,CAAR;AAWAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC,EAbkE,CAclE;AACA;AACD,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)//get product id from api\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n  //save to localstorage (only store strings in json) where we use getState()\n  //because we want to save the entire cart\n}\n\n// export const removeFromCart = (id) => (dispatch, getState) => {\n//   dispatch({\n//     type: CART_REMOVE_ITEM,\n//     payload: id,\n//   })\n\n//   localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n// }\n\n// export const saveShippingAddress = (data) => (dispatch) => {\n//   dispatch({\n//     type: CART_SAVE_SHIPPING_ADDRESS,\n//     payload: data,\n//   })\n\n//   localStorage.setItem('shippingAddress', JSON.stringify(data))\n// }\n\n// export const savePaymentMethod = (data) => (dispatch) => {\n//   dispatch({\n//     type: CART_SAVE_PAYMENT_METHOD,\n//     payload: data,\n//   })\n\n//   localStorage.setItem('paymentMethod', JSON.stringify(data))\n// }\n"]},"metadata":{},"sourceType":"module"}