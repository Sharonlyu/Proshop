{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product); //product here is id\n\n      if (existItem) {\n        //exist\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item] //add new item\n\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload) //filter out\n\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        //return the initial state and add shipping address\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    case CART_CLEAR_ITEMS:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/yuliu/proshop/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,0BAHJ,EAIIC,wBAJJ,EAKIC,gBALJ,QAMS,4BANT;AAQE,OAAO,MAAMC,WAAW,GAAG,CACzBC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,eAAe,EAAE;AAAlC,CADiB,EAEzBC,MAFyB,KAGtB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACE,YAAMW,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB,CAHF,CAG2E;;AAEzE,UAAIH,SAAJ,EAAe;AAAC;AACd,eAAO,EACL,GAAGP,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGT,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB,CAFN,CAEiC;;AAFjC,SAAP;AAID;;AAEH,SAAKV,gBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD,CAFN,CAEkE;;AAFlE,OAAP;;AAMF,SAAKV,0BAAL;AACE,aAAO,EACL,GAAGI,KADE;AACI;AACTE,QAAAA,eAAe,EAAEC,MAAM,CAACG;AAFnB,OAAP;;AAKF,SAAKT,wBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELa,QAAAA,aAAa,EAAEV,MAAM,CAACG;AAFjB,OAAP;;AAMF,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELC,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF;AACE,aAAOD,KAAP;AA9CJ;AAgDD,CApDM","sourcesContent":["import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_CLEAR_ITEMS,\n  } from '../constants/cartConstants'\n  \n  export const cartReducer = (\n    state = { cartItems: [], shippingAddress: {} },\n    action\n  ) => {\n    switch (action.type) {\n      case CART_ADD_ITEM:\n        const item = action.payload\n  \n        const existItem = state.cartItems.find((x) => x.product === item.product)//product here is id\n  \n        if (existItem) {//exist\n          return {\n            ...state,\n            cartItems: state.cartItems.map((x) =>\n              x.product === existItem.product ? item : x\n            ),\n          }\n        } else {\n          return {\n            ...state,\n            cartItems: [...state.cartItems, item],//add new item\n          }\n        }\n\n      case CART_REMOVE_ITEM:\n        return {\n          ...state,\n          cartItems: state.cartItems.filter((x) => x.product !== action.payload),//filter out\n        }\n\n\n      case CART_SAVE_SHIPPING_ADDRESS:\n        return {\n          ...state,//return the initial state and add shipping address\n          shippingAddress: action.payload,\n        }\n        \n      case CART_SAVE_PAYMENT_METHOD:\n        return {\n          ...state,\n          paymentMethod: action.payload,\n        }\n\n        \n      case CART_CLEAR_ITEMS:\n        return {\n          ...state,\n          cartItems: [],\n        }\n      default:\n        return state\n    }\n  }"]},"metadata":{},"sourceType":"module"}