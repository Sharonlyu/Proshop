{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers'; //combine many reducers\n//applyMiddleware for using thunk\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  //every product has reducer applied on it\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)) //spread operator\n);\nexport default store;","map":{"version":3,"sources":["/Users/yuliu/proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,QAAwD,4BAAxD;AACA,SAAQC,WAAR,QAA0B,yBAA1B,C,CAEA;AACA;;AACA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAEJ,kBADe;AACI;AAChCK,EAAAA,cAAc,EAAEJ,qBAFY;AAG5BK,EAAAA,IAAI,EAAEJ;AAHsB,CAAD,CAA/B;AAMA,MAAMK,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACV,KAAD,CAAnB;AAEA,MAAMW,KAAK,GAAGd,WAAW,CACrBQ,OADqB,EAErBI,YAFqB,EAGrBR,mBAAmB,CAACF,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAHE,CAG+B;AAH/B,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productListReducer, productDetailsReducer} from './reducers/productReducers'\nimport {cartReducer} from './reducers/cartReducers'\n\n//combine many reducers\n//applyMiddleware for using thunk\nconst reducer = combineReducers({\n    productList: productListReducer,//every product has reducer applied on it\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n})\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware)) //spread operator\n)\nexport default store"]},"metadata":{},"sourceType":"module"}