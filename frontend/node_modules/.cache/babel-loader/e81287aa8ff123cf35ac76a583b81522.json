{"ast":null,"code":"import { CART_ADD_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  //evalutate type to return newState\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product); //product here is id\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item] //just add new item\n\n        };\n      }\n\n      return {\n        loading: true,\n        products: []\n      };\n    //loading is true because result is not given yet\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload\n      };\n    //send data in the payload\n\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    //send error in the payload\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/yuliu/proshop/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","loading","products","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","error"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,4BAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAT,EAA0BC,MAA1B,KAAoC;AAC3D;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,aAAL;AACI,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA9C,CAAlB,CAFJ,CAE4E;;AACxE,UAAGH,SAAH,EAAa;AACT,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACG,OAAtB,GAAgCL,IAAhC,GAAsCI,CAA7D;AAFR,SAAP;AAKH,OAND,MAMK;AACD,eAAM,EACF,GAAGR,KADD;AAEFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB,CAFR,CAEkC;;AAFlC,SAAN;AAIH;;AACD,aAAO;AAACO,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAP;AACA;;AACJ,SAAKC,oBAAL;AACI,aAAO;AAACF,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,QAAQ,EAAEV,MAAM,CAACG;AAAlC,OAAP;AAAiD;;AACrD,SAAKS,iBAAL;AACI,aAAO;AAACH,QAAAA,OAAO,EAAE,KAAV;AAAiBI,QAAAA,KAAK,EAAEb,MAAM,CAACG;AAA/B,OAAP;AAA8C;;AAClD;AACI,aAAOL,KAAP;AAvBR;AAyBH,CA3BM","sourcesContent":["import {CART_ADD_ITEM} from '../constants/cartConstants'\n\nexport const cartReducer = (state = {cartItems: []}, action) =>{\n    //evalutate type to return newState\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find((x)=> x.product === item.product)//product here is id\n            if(existItem){\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x=>x.product===existItem.product ? item: x)\n                }\n\n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, item]//just add new item\n                }\n            }\n            return {loading: true, products: []}\n            //loading is true because result is not given yet\n        case PRODUCT_LIST_SUCCESS:\n            return {loading: false, products: action.payload}//send data in the payload\n        case PRODUCT_LIST_FAIL:\n            return {loading: false, error: action.payload}//send error in the payload\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}