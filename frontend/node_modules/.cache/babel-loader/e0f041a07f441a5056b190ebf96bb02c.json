{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants';\nexport const productListReducer = (state = {\n  products: []\n}, action) => {\n  //evalutate type to return newState\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return {\n        loading: true,\n        products: []\n      };\n    //loading is true because result is not given yet\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload\n      };\n    //send data in the payload\n\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    //send error in the payload\n\n    default:\n      return state;\n  }\n};\nexport const productDetailsReducer = (state = {\n  products: {\n    reviews: []\n  }\n}, action) => {\n  //evalutate type to return newState\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        loading: true,\n        ...state\n      };\n    //whatever there\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload\n      };\n    //send data in the payload\n\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    //send error in the payload\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/yuliu/proshop/frontend/src/reducers/productReducers.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_REQUEST","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","productListReducer","state","products","action","type","loading","payload","error","productDetailsReducer","reviews","product"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,oBANJ,EAOIC,sBAPJ,EAQIC,sBARJ,EASIC,mBATJ,EAUIC,oBAVJ,EAWIC,mBAXJ,EAYIC,sBAZJ,EAaIC,sBAbJ,EAcIC,sBAdJ,EAeIC,sBAfJ,EAgBIC,mBAhBJ,EAiBIC,oBAjBJ,EAkBIC,6BAlBJ,EAmBIC,6BAnBJ,EAoBIC,0BApBJ,EAqBIC,2BArBJ,EAsBIC,mBAtBJ,EAuBIC,mBAvBJ,EAwBIC,gBAxBJ,QAyBS,+BAzBT;AA6BA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAT,EAAyBC,MAAzB,KAAmC;AACjE;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK5B,oBAAL;AACI,aAAO;AAAC6B,QAAAA,OAAO,EAAE,IAAV;AAAgBH,QAAAA,QAAQ,EAAE;AAA1B,OAAP;AACA;;AACJ,SAAKzB,oBAAL;AACI,aAAO;AAAC4B,QAAAA,OAAO,EAAE,KAAV;AAAiBH,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AAAlC,OAAP;AAAiD;;AACrD,SAAK5B,iBAAL;AACI,aAAO;AAAC2B,QAAAA,OAAO,EAAE,KAAV;AAAiBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAA/B,OAAP;AAA8C;;AAClD;AACI,aAAOL,KAAP;AATR;AAWH,CAbM;AAeP,OAAO,MAAMO,qBAAqB,GAAG,CAACP,KAAK,GAAG;AAACC,EAAAA,QAAQ,EAAE;AAACO,IAAAA,OAAO,EAAE;AAAV;AAAX,CAAT,EAAoCN,MAApC,KAA8C;AAC/E;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKzB,uBAAL;AACI,aAAO;AAAC0B,QAAAA,OAAO,EAAE,IAAV;AAAgB,WAAGJ;AAAnB,OAAP;AAAgC;;AACpC,SAAKrB,uBAAL;AACI,aAAO;AAACyB,QAAAA,OAAO,EAAE,KAAV;AAAiBK,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAAjC,OAAP;AAAgD;;AACpD,SAAKzB,oBAAL;AACI,aAAO;AAACwB,QAAAA,OAAO,EAAE,KAAV;AAAiBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAA/B,OAAP;AAA8C;;AAClD;AACI,aAAOL,KAAP;AARR;AAUH,CAZM","sourcesContent":["import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n  } from '../constants/productConstants'\n\n\n\nexport const productListReducer = (state = {products: []}, action) =>{\n    //evalutate type to return newState\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return {loading: true, products: []}\n            //loading is true because result is not given yet\n        case PRODUCT_LIST_SUCCESS:\n            return {loading: false, products: action.payload}//send data in the payload\n        case PRODUCT_LIST_FAIL:\n            return {loading: false, error: action.payload}//send error in the payload\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = {products: {reviews: []}}, action) =>{\n    //evalutate type to return newState\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading: true, ...state}//whatever there\n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading: false, product: action.payload}//send data in the payload\n        case PRODUCT_DETAILS_FAIL:\n            return {loading: false, error: action.payload}//send error in the payload\n        default:\n            return state\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}